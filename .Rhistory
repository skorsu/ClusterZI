for(i in 1:30){
dsd_binder[, i] <- t(apply(result$dsd_model[[i]]$dsd_assign[-(1:10000), ], 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
### Analyze: -------------------------------------------------------------------
#### VI
zz_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
dz_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
dp_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
mfm_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
dd_vi_sum <- matrix(NA, nrow = 30, ncol = 3)
dsd_vi_sum <- matrix(NA, nrow = 30, ncol = 3)
for(i in 1:30){
actual_ci <- dat[[i]]$ci
### ZIDM-ZIDM
zz_vi_sum[i, 1:3] <- mclustcomp(zz_VI[, i], actual_ci)[c(5, 1, 22), 2]
zz_vi_sum[i, 4] <- n_unique(zz_VI[, i])
### DM-ZIDM
dz_vi_sum[i, 1:3] <- mclustcomp(dz_VI[, i], actual_ci)[c(5, 1, 22), 2]
dz_vi_sum[i, 4] <- n_unique(dz_VI[, i])
### Shi (DP)
dp_vi_sum[i, 1:3] <- mclustcomp(shi_dp_VI[, i], actual_ci)[c(5, 1, 22), 2]
dp_vi_sum[i, 4] <- n_unique(shi_dp_VI[, i])
### Shi (MFM)
mfm_vi_sum[i, 1:3] <- mclustcomp(shi_mfm_VI[, i], actual_ci)[c(5, 1, 22), 2]
mfm_vi_sum[i, 4] <- n_unique(shi_mfm_VI[, i])
### DM-DM
dd_vi_sum[i, 1:3] <- mclustcomp(dd_VI[, i], actual_ci)[c(5, 1, 22), 2]
### DM-sDM
dsd_vi_sum[i, 1:3] <- mclustcomp(dsd_VI[, i], actual_ci)[c(5, 1, 22), 2]
}
ms(zz_vi_sum)
ms(dz_vi_sum)
ms(dp_vi_sum)
ms(mfm_vi_sum)
ms(dd_vi_sum)
ms(dsd_vi_sum)
#### Binder
zz_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
dz_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
dp_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
mfm_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
dd_bd_sum <- matrix(NA, nrow = 30, ncol = 3)
dsd_bd_sum <- matrix(NA, nrow = 30, ncol = 3)
for(i in 1:30){
actual_ci <- dat[[i]]$ci
### ZIDM-ZIDM
zz_bd_sum[i, 1:3] <- mclustcomp(zz_binder[, i], actual_ci)[c(5, 1, 22), 2]
zz_bd_sum[i, 4] <- n_unique(zz_binder[, i])
### DM-ZIDM
dz_bd_sum[i, 1:3] <- mclustcomp(dz_binder[, i], actual_ci)[c(5, 1, 22), 2]
dz_bd_sum[i, 4] <- n_unique(dz_binder[, i])
### Shi (DP)
dp_bd_sum[i, 1:3] <- mclustcomp(shi_dp_binder[, i], actual_ci)[c(5, 1, 22), 2]
dp_bd_sum[i, 4] <- n_unique(shi_dp_binder[, i])
### Shi (MFM)
mfm_bd_sum[i, 1:3] <- mclustcomp(shi_mfm_binder[, i], actual_ci)[c(5, 1, 22), 2]
mfm_bd_sum[i, 4] <- n_unique(shi_mfm_binder[, i])
### DM-DM
dd_bd_sum[i, 1:3] <- mclustcomp(dd_binder[, i], actual_ci)[c(5, 1, 22), 2]
### DM-sDM
dsd_bd_sum[i, 1:3] <- mclustcomp(dsd_binder[, i], actual_ci)[c(5, 1, 22), 2]
}
ms(zz_bd_sum)
ms(dz_bd_sum)
ms(dp_bd_sum)
ms(mfm_bd_sum)
ms(dd_bd_sum)
ms(dsd_bd_sum)
case <- "case3b"
dat <- readRDS(paste0(path, "data_", case, ".RData"))
result <- readRDS(paste0(path, "mod_", case, ".RData"))
time_mat <- matrix(NA, nrow = 30, ncol = 6) ### ZZ, DZ, DP, MFM, DD, DsD
for(i in 1:30){
time_mat[i, 1] <- result$zz_model[[i]]$zz_time
time_mat[i, 2] <- result$dz_model[[i]]$dz_time
time_mat[i, 3] <- result$shi_dp_model[[i]]$shi_dp_time
time_mat[i, 4] <- result$shi_mfm_model[[i]]$shi_mfm_time
time_mat[i, 5] <- result$dd_model[[i]]$dd_time
time_mat[i, 6] <- result$dsd_model[[i]]$dsd_time
}
time_mat
result$zz_model[[1]]$zz_time
result$shi_dp_model[[6]]$shi_dp_time
result$dd_model[[1]]$dd_time
time_mat[, 4] <- 60 * time_mat[, 4]
time_mat[, 3] <- 60 * time_mat[, 3]
ms(time_mat)
### VI: ------------------------------------------------------------------------
#### ZIDM-ZIDM
zz_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
zz_VI[, i] <- result$zz_model[[i]]$zz_assign[-(1:10000), ] %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
#### DM-ZIDM
dz_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dz_VI[, i] <- result$dz_model[[i]]$dz_assign[-(1:10000), ] %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
#### Shi (DP)
shi_dp_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
# shi_dp_VI[, i] <- result_shi_DM$fix_shi_result[[i]]$shi_mod$crec %>%
#   salso(maxNClusters = 10, loss = "VI") %>%
#   as.numeric()
shi_dp_VI[, i] <- result$shi_dp_model[[i]]$shi_dp_assign %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
#### Shi (MFM)
shi_mfm_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
shi_mfm_VI[, i] <- result$shi_mfm_model[[i]]$shi_mfm_assign %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
#### DM-DM
dd_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dd_VI[, i] <- result$dd_model[[i]]$dd_assign[-(1:10000), ] %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
#### DM-sDM
dsd_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dsd_VI[, i] <- result$dsd_model[[i]]$dsd_assign[-(1:10000), ] %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
### Binder: --------------------------------------------------------------------
#### ZIDM-ZIDM
zz_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
zz_binder[, i] <- t(apply(result$zz_model[[i]]$zz_assign[-(1:10000), ], 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
#### DM-ZIDM
dz_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dz_binder[, i] <- t(apply(result$dz_model[[i]]$dz_assign[-(1:10000), ], 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
#### Shi (DP)
shi_dp_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
# shi_dp_binder[, i] <- t(apply(result_shi_DM$fix_shi_result[[i]]$shi_mod$crec, 1, ctofac)) %>%
#   comp.psm() %>%
#   minbinder(max.k = 10) %>%
#   .$cl
shi_dp_binder[, i] <- t(apply(result$shi_dp_model[[i]]$shi_dp_assign, 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
#### Shi (MFM)
shi_mfm_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
shi_mfm_binder[, i] <- t(apply(result$shi_mfm_model[[i]]$shi_mfm_assign, 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
#### DM-DM
dd_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dd_binder[, i] <- t(apply(result$dd_model[[i]]$dd_assign[-(1:10000), ], 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
#### DM-sDM
dsd_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dsd_binder[, i] <- t(apply(result$dsd_model[[i]]$dsd_assign[-(1:10000), ], 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
### Analyze: -------------------------------------------------------------------
#### VI
zz_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
dz_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
dp_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
mfm_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
dd_vi_sum <- matrix(NA, nrow = 30, ncol = 3)
dsd_vi_sum <- matrix(NA, nrow = 30, ncol = 3)
for(i in 1:30){
actual_ci <- dat[[i]]$ci
### ZIDM-ZIDM
zz_vi_sum[i, 1:3] <- mclustcomp(zz_VI[, i], actual_ci)[c(5, 1, 22), 2]
zz_vi_sum[i, 4] <- n_unique(zz_VI[, i])
### DM-ZIDM
dz_vi_sum[i, 1:3] <- mclustcomp(dz_VI[, i], actual_ci)[c(5, 1, 22), 2]
dz_vi_sum[i, 4] <- n_unique(dz_VI[, i])
### Shi (DP)
dp_vi_sum[i, 1:3] <- mclustcomp(shi_dp_VI[, i], actual_ci)[c(5, 1, 22), 2]
dp_vi_sum[i, 4] <- n_unique(shi_dp_VI[, i])
### Shi (MFM)
mfm_vi_sum[i, 1:3] <- mclustcomp(shi_mfm_VI[, i], actual_ci)[c(5, 1, 22), 2]
mfm_vi_sum[i, 4] <- n_unique(shi_mfm_VI[, i])
### DM-DM
dd_vi_sum[i, 1:3] <- mclustcomp(dd_VI[, i], actual_ci)[c(5, 1, 22), 2]
### DM-sDM
dsd_vi_sum[i, 1:3] <- mclustcomp(dsd_VI[, i], actual_ci)[c(5, 1, 22), 2]
}
ms(zz_vi_sum)
ms(dz_vi_sum)
ms(dp_vi_sum)
ms(mfm_vi_sum)
ms(dd_vi_sum)
ms(dsd_vi_sum)
#### Binder
zz_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
dz_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
dp_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
mfm_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
dd_bd_sum <- matrix(NA, nrow = 30, ncol = 3)
dsd_bd_sum <- matrix(NA, nrow = 30, ncol = 3)
for(i in 1:30){
actual_ci <- dat[[i]]$ci
### ZIDM-ZIDM
zz_bd_sum[i, 1:3] <- mclustcomp(zz_binder[, i], actual_ci)[c(5, 1, 22), 2]
zz_bd_sum[i, 4] <- n_unique(zz_binder[, i])
### DM-ZIDM
dz_bd_sum[i, 1:3] <- mclustcomp(dz_binder[, i], actual_ci)[c(5, 1, 22), 2]
dz_bd_sum[i, 4] <- n_unique(dz_binder[, i])
### Shi (DP)
dp_bd_sum[i, 1:3] <- mclustcomp(shi_dp_binder[, i], actual_ci)[c(5, 1, 22), 2]
dp_bd_sum[i, 4] <- n_unique(shi_dp_binder[, i])
### Shi (MFM)
mfm_bd_sum[i, 1:3] <- mclustcomp(shi_mfm_binder[, i], actual_ci)[c(5, 1, 22), 2]
mfm_bd_sum[i, 4] <- n_unique(shi_mfm_binder[, i])
### DM-DM
dd_bd_sum[i, 1:3] <- mclustcomp(dd_binder[, i], actual_ci)[c(5, 1, 22), 2]
### DM-sDM
dsd_bd_sum[i, 1:3] <- mclustcomp(dsd_binder[, i], actual_ci)[c(5, 1, 22), 2]
}
ms(zz_bd_sum)
ms(dz_bd_sum)
ms(dp_bd_sum)
ms(mfm_bd_sum)
ms(dd_bd_sum)
ms(dsd_bd_sum)
case <- "case3b_zi"
dat <- readRDS(paste0(path, "data_", case, ".RData"))
result <- readRDS(paste0(path, "mod_", case, ".RData"))
time_mat <- matrix(NA, nrow = 30, ncol = 6) ### ZZ, DZ, DP, MFM, DD, DsD
for(i in 1:30){
time_mat[i, 1] <- result$zz_model[[i]]$zz_time
time_mat[i, 2] <- result$dz_model[[i]]$dz_time
time_mat[i, 3] <- result$shi_dp_model[[i]]$shi_dp_time
time_mat[i, 4] <- result$shi_mfm_model[[i]]$shi_mfm_time
time_mat[i, 5] <- result$dd_model[[i]]$dd_time
time_mat[i, 6] <- result$dsd_model[[i]]$dsd_time
}
time_mat
result$shi_dp_model[[i]]$shi_dp_time
result$shi_mfm_model[[i]]$shi_mfm_time
time_mat[, 4] <- 60 * time_mat[, 4]
ms(time_mat)
### VI: ------------------------------------------------------------------------
#### ZIDM-ZIDM
zz_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
zz_VI[, i] <- result$zz_model[[i]]$zz_assign[-(1:10000), ] %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
#### DM-ZIDM
dz_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dz_VI[, i] <- result$dz_model[[i]]$dz_assign[-(1:10000), ] %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
#### Shi (DP)
shi_dp_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
# shi_dp_VI[, i] <- result_shi_DM$fix_shi_result[[i]]$shi_mod$crec %>%
#   salso(maxNClusters = 10, loss = "VI") %>%
#   as.numeric()
shi_dp_VI[, i] <- result$shi_dp_model[[i]]$shi_dp_assign %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
#### Shi (MFM)
shi_mfm_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
shi_mfm_VI[, i] <- result$shi_mfm_model[[i]]$shi_mfm_assign %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
#### DM-DM
dd_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dd_VI[, i] <- result$dd_model[[i]]$dd_assign[-(1:10000), ] %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
#### DM-sDM
dsd_VI <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dsd_VI[, i] <- result$dsd_model[[i]]$dsd_assign[-(1:10000), ] %>%
salso(maxNClusters = 10, loss = "VI") %>%
as.numeric()
}
### Binder: --------------------------------------------------------------------
#### ZIDM-ZIDM
zz_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
zz_binder[, i] <- t(apply(result$zz_model[[i]]$zz_assign[-(1:10000), ], 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
#### DM-ZIDM
dz_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dz_binder[, i] <- t(apply(result$dz_model[[i]]$dz_assign[-(1:10000), ], 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
#### Shi (DP)
shi_dp_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
# shi_dp_binder[, i] <- t(apply(result_shi_DM$fix_shi_result[[i]]$shi_mod$crec, 1, ctofac)) %>%
#   comp.psm() %>%
#   minbinder(max.k = 10) %>%
#   .$cl
shi_dp_binder[, i] <- t(apply(result$shi_dp_model[[i]]$shi_dp_assign, 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
#### Shi (MFM)
shi_mfm_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
shi_mfm_binder[, i] <- t(apply(result$shi_mfm_model[[i]]$shi_mfm_assign, 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
#### DM-DM
dd_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dd_binder[, i] <- t(apply(result$dd_model[[i]]$dd_assign[-(1:10000), ], 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
#### DM-sDM
dsd_binder <- matrix(NA, nrow = 200, ncol = 30)
for(i in 1:30){
dsd_binder[, i] <- t(apply(result$dsd_model[[i]]$dsd_assign[-(1:10000), ], 1, ctofac)) %>%
comp.psm() %>%
minbinder(max.k = 10) %>%
.$cl
}
### Analyze: -------------------------------------------------------------------
#### VI
zz_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
dz_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
dp_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
mfm_vi_sum <- matrix(NA, nrow = 30, ncol = 4)
dd_vi_sum <- matrix(NA, nrow = 30, ncol = 3)
dsd_vi_sum <- matrix(NA, nrow = 30, ncol = 3)
for(i in 1:30){
actual_ci <- dat[[i]]$ci
### ZIDM-ZIDM
zz_vi_sum[i, 1:3] <- mclustcomp(zz_VI[, i], actual_ci)[c(5, 1, 22), 2]
zz_vi_sum[i, 4] <- n_unique(zz_VI[, i])
### DM-ZIDM
dz_vi_sum[i, 1:3] <- mclustcomp(dz_VI[, i], actual_ci)[c(5, 1, 22), 2]
dz_vi_sum[i, 4] <- n_unique(dz_VI[, i])
### Shi (DP)
dp_vi_sum[i, 1:3] <- mclustcomp(shi_dp_VI[, i], actual_ci)[c(5, 1, 22), 2]
dp_vi_sum[i, 4] <- n_unique(shi_dp_VI[, i])
### Shi (MFM)
mfm_vi_sum[i, 1:3] <- mclustcomp(shi_mfm_VI[, i], actual_ci)[c(5, 1, 22), 2]
mfm_vi_sum[i, 4] <- n_unique(shi_mfm_VI[, i])
### DM-DM
dd_vi_sum[i, 1:3] <- mclustcomp(dd_VI[, i], actual_ci)[c(5, 1, 22), 2]
### DM-sDM
dsd_vi_sum[i, 1:3] <- mclustcomp(dsd_VI[, i], actual_ci)[c(5, 1, 22), 2]
}
ms(zz_vi_sum)
ms(dz_vi_sum)
ms(dp_vi_sum)
ms(mfm_vi_sum)
ms(dd_vi_sum)
ms(dsd_vi_sum)
#### Binder
zz_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
dz_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
dp_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
mfm_bd_sum <- matrix(NA, nrow = 30, ncol = 4)
dd_bd_sum <- matrix(NA, nrow = 30, ncol = 3)
dsd_bd_sum <- matrix(NA, nrow = 30, ncol = 3)
for(i in 1:30){
actual_ci <- dat[[i]]$ci
### ZIDM-ZIDM
zz_bd_sum[i, 1:3] <- mclustcomp(zz_binder[, i], actual_ci)[c(5, 1, 22), 2]
zz_bd_sum[i, 4] <- n_unique(zz_binder[, i])
### DM-ZIDM
dz_bd_sum[i, 1:3] <- mclustcomp(dz_binder[, i], actual_ci)[c(5, 1, 22), 2]
dz_bd_sum[i, 4] <- n_unique(dz_binder[, i])
### Shi (DP)
dp_bd_sum[i, 1:3] <- mclustcomp(shi_dp_binder[, i], actual_ci)[c(5, 1, 22), 2]
dp_bd_sum[i, 4] <- n_unique(shi_dp_binder[, i])
### Shi (MFM)
mfm_bd_sum[i, 1:3] <- mclustcomp(shi_mfm_binder[, i], actual_ci)[c(5, 1, 22), 2]
mfm_bd_sum[i, 4] <- n_unique(shi_mfm_binder[, i])
### DM-DM
dd_bd_sum[i, 1:3] <- mclustcomp(dd_binder[, i], actual_ci)[c(5, 1, 22), 2]
### DM-sDM
dsd_bd_sum[i, 1:3] <- mclustcomp(dsd_binder[, i], actual_ci)[c(5, 1, 22), 2]
}
ms(zz_bd_sum)
ms(dz_bd_sum)
ms(dp_bd_sum)
ms(mfm_bd_sum)
ms(dd_bd_sum)
ms(dsd_bd_sum)
library(Rcpp)
library(dirmult)
library(salso)
library(foreach)
library(doParallel)
library(mclustcomp)
library(cluster)
library(ecodist)
library(ggplot2)
library(plotrix)
library(latex2exp)
library(sparseMbClust)
library(tidyverse)
sourceCpp("/Users/kevinkvp/Desktop/Github Repo/ClusterZI/src/clusterZI.cpp")
### Function: Simulating the data
data_sim <- function(n, pat_mat, pi_gamma, xi_conc, xi_non_conc, sum_z){
K <- nrow(pat_mat)
ci <- sample(1:K, n, replace = TRUE)
pmat <- (pat_mat[ci, ] * xi_conc) + xi_non_conc
at_risk_mat <- matrix(rbinom(n * ncol(pat_mat), 1, pi_gamma),
nrow = n, ncol = ncol(pat_mat))
prob_mat <- matrix(NA, nrow = n, ncol = ncol(pat_mat))
z <- matrix(NA, nrow = n, ncol = ncol(pat_mat))
for(i in 1:n){
prob_mat[i, ] <- as.numeric(at_risk_mat[i, ]) * pmat[i, ]
z[i, ] <- simPop(J = 1, K = ncol(pat_mat), n = sum_z,
pi = prob_mat[i, ]/sum(prob_mat[i, ]),
theta = 0.001)$data
}
return(list(ci = ci, at_risk_mat = at_risk_mat, prob_mat = prob_mat,
z = z, xi_mat = pmat))
}
registerDoParallel(5)
datsim <- foreach(t = 1:20) %dopar% {
set.seed(t)
patmat <- matrix(0, ncol = 50, nrow = 3)
patmat[1, 1] <- 1
patmat[2, 1:2] <- 1
patmat[3, 1:3] <- 1
dat <- data_sim(n = 50, pat_mat = patmat, pi_gamma = 1,
xi_conc = 10, xi_non_conc = 0.1, sum_z = 2500)
list(dat = dat, patmat = patmat)
}
stopImplicitCluster()
registerDoParallel(5)
result <- foreach(t = 1:20) %dopar% {
### S1: beta_init = datsim[[t]]$patmat, ci_init = datsim[[t]]$dat$ci - 1
### S2: beta_init = datsim[[t]]$patmat, ci_init = sample(0:Kmax, 50, replace = TRUE)
### S3: Kmax = 50, beta_init = datsim[[t]]$dat$z/rowSums(datsim[[t]]$dat$z), ci_init = 0:49
### S4: Kmax = 10, beta_init = matrix(0, ncol = 50, nrow = 10), ci_init = rep(0, 50)
set.seed(t)
debug_brs(iter = 10000, Kmax = 10, nbeta_split = 1,
z = datsim[[t]]$dat$z,
atrisk = datsim[[t]]$dat$at_risk_mat,
beta_init = matrix(0, ncol = 50, nrow = 10),
ci_init = rep(0, 50),
theta = 10, mu = 0, s2 = 1, s2_MH = 10, launch_iter = 10,
r0c = 1, r1c = 1)
}
stopImplicitCluster()
sapply(1:20,
function(x){apply(result[[x]]$ci_result, 1, function(y){length(unique(y))})}) |>
matplot(type = "l", ylim = c(1, 10), ylab = "Active Clusters",
xlab = "Iteration", main = "One cluster - theta = 10 and s2MH = 10 with n_beta = 1",
lwd = 1.5)
accept_prob <- function(result_list){
overall_accept <- mean(result_list$sm_accept)
merge_accept <- mean(result_list$sm_accept[result_list$sm_status == 0])
split_accept <- mean(result_list$sm_accept[result_list$sm_status == 1])
c(overall_accept, merge_accept, split_accept)
}
rowMeans(sapply(1:20, function(x){accept_prob(result[[x]])}))
apply(sapply(1:20, function(x){accept_prob(result[[x]])}), 1, sd)
factor(result[[1]]$sm_status, levels = c(0, 1), labels = c("Merge", "Split"))
table(factor(result[[1]]$sm_status, levels = c(0, 1), labels = c("Merge", "Split")))
0.05/6
adj_rand
